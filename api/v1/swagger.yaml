---
openapi: 3.0.1
info:
  description: SafeIsh API - The most secure safebox
  version: 1.0.0
  title: SafeIsh API
paths:
  "/api/v1/safeboxes":
    post:
      summary: Creates a safebox
      tags:
      - Safeboxes
      operationId: createSafebox
      description: Creates a new safebox based on a UUID, a non-empty name and a password.
      parameters: []
      responses:
        '201':
          description: Safebox successfully created
          links:
            open:
              operationId: openSafebox
              parameters:
                path.id: "$request.body#/id"
                header.X-SafeIsh-Password: "$request.body#/password"
            getItems:
              operationId: getSafeboxItems
              parameters:
                path.id: "$request.body#/id"
            addItem:
              operationId: addSafeboxItem
              parameters:
                path.id: "$request.body#/id"
        '409':
          description: Safebox already exists
          content:
            application/vnd.api+json:
              schema:
                "$ref": "#/components/schemas/api_error"
        '422':
          description: Malformed expected data
          content:
            application/vnd.api+json:
              schema:
                "$ref": "#/components/schemas/api_error"
        '500':
          description: Unexpected API error
          content:
            application/vnd.api+json:
              schema:
                "$ref": "#/components/schemas/api_error"
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              "$ref": "#/components/schemas/new_safebox"
components:
  securitySchemes:
    bearerToken:
      type: http
      scheme: bearer
  schemas:
    new_safebox:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: f626c808-648c-41fe-865d-c6062f3e0899
            type:
              type: string
              example: safebox
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: Secure safebox 01
                password:
                  type: string
                  example: extremelySecurePassword
              required:
              - name
              - password
          required:
          - id
          - type
          - attributes
      required:
      - data
    api_error:
      type: object
      properties:
        errors:
          type: array
          items:
            properties:
              id:
                type: string
                format: uuid
                example: 9a80bb9b-3e9c-4eef-83b6-12990cf0aab2
              title:
                type: string
                example: Unknown attribute
              detail:
                type: string
                example: 'Unknown attribute: ''userId'''
              status:
                type: string
                example: '400'
              code:
                type: string
                example: '101'
              source:
                type: object
                properties:
                  pointer:
                    type: string
                    example: data/attributes/userId
            required:
            - title
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
